{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/* A decorator that marks the class ConvertToCurrency as a pipe and assigns it a unique name\r\n   \"convertToCurrency\". This name is used to invoke the pipe in the templates. */\n/* Defines the ConvertToCurrency class which implements PipeTransform interface, which forces us to\r\n   use the transform() method. In the class, the method takes two input arguments and returns a string\r\n   that concatenates the input arguments after converting the number to a string. Remember to implement\r\n   this in the app.module.ts! */\nexport class ConvertToCurrency {\n  transform(value, character) {\n    return character + ' ' + value.toString();\n  }\n  static #_ = this.ɵfac = function ConvertToCurrency_Factory(t) {\n    return new (t || ConvertToCurrency)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"convertToCurrency\",\n    type: ConvertToCurrency,\n    pure: true\n  });\n}","map":{"version":3,"mappings":";AAEA;;AAMA;;;;AAIA,OAAM,MAAOA,iBAAiB;EAC5BC,SAAS,CAACC,KAAa,EAAEC,SAAiB;IACxC,OAAOA,SAAS,GAAG,GAAG,GAAGD,KAAK,CAACE,QAAQ,EAAE;EAC3C;EAAC;qBAHUJ,iBAAiB;EAAA;EAAA;;UAAjBA,iBAAiB;IAAAK;EAAA","names":["ConvertToCurrency","transform","value","character","toString","pure"],"sourceRoot":"","sources":["C:\\Users\\gisle\\Documents\\WebApp\\MyShop-2\\AngularPractice\\ClientApp\\src\\app\\shared\\convert-to-currency.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n/* A decorator that marks the class ConvertToCurrency as a pipe and assigns it a unique name\r\n   \"convertToCurrency\". This name is used to invoke the pipe in the templates. */\r\n@Pipe({\r\n  name: 'convertToCurrency'\r\n})\r\n\r\n/* Defines the ConvertToCurrency class which implements PipeTransform interface, which forces us to\r\n   use the transform() method. In the class, the method takes two input arguments and returns a string\r\n   that concatenates the input arguments after converting the number to a string. Remember to implement\r\n   this in the app.module.ts! */\r\nexport class ConvertToCurrency implements PipeTransform {\r\n  transform(value: number, character: string): string {\r\n    return character + ' ' + value.toString();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
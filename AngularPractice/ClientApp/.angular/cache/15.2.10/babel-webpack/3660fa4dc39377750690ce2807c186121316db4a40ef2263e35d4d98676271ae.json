{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../shared/convert-to-currency.pipe\";\nfunction ItemsComponent_tr_17_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", item_r1.ImageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ItemsComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"convertToCurrency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ItemsComponent_tr_17_td_10_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.ItemId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.Name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 5, item_r1.Price, \"kr.\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.Description, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.displayImage);\n  }\n}\n// If we want to style our components, we can simply reference a css file.\nexport class ItemsComponent {\n  constructor() {\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    // For now the content of the array item is any, because we don't care about the type\n    this.items = [{\n      \"ItemId\": 1,\n      \"Name\": \"Pizza\",\n      \"Price\": 150,\n      \"Description\": \"Delicious Italian dish with a thin crust topped with tomato sauce, cheese, and various toppings.\",\n      \"ImageUrl\": \"assets/images/pizza.jpg\"\n    }, {\n      \"ItemId\": 2,\n      \"Name\": \"Fried Chicken Leg\",\n      \"Price\": 20,\n      \"Description\": \"Crispy and succulent chicken leg that is deep-fried to perfection, often served as a popular fast food item.\",\n      \"ImageUrl\": \"assets/images/chickenleg.jpg\"\n    }];\n  }\n  // Method that inverts the boolean displayImage\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  static #_ = this.ɵfac = function ItemsComponent_Factory(t) {\n    return new (t || ItemsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ItemsComponent,\n    selectors: [[\"app-items-component\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[\"id\", \"tableLabel\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [\"width\", \"180\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"120\"], [4, \"ngIf\"], [\"width\", \"80\", 3, \"src\"]],\n    template: function ItemsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\")(4, \"tr\")(5, \"th\");\n        i0.ɵɵtext(6, \"Item Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 2)(14, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ItemsComponent_Template_button_click_14_listener() {\n          return ctx.toggleImage();\n        });\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, ItemsComponent_tr_17_Template, 11, 8, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"List of Items (\", ctx.viewTitle, \" View)\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate1(\" \", ctx.displayImage ? \"Hide\" : \"Show\", \" Image\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.ConvertToCurrency],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"mappings":";;;;;IA4BMA,0BAAyB;IAAAA,yBAAsC;IAAAA,iBAAK;;;;IAAtCA,eAAmB;IAAnBA,wDAAmB;;;;;IAXnDA,0BAA+B;IACxBA,YAAkB;IAAAA,iBAAK;IAC5BA,0BAAI;IAACA,YAAgB;IAAAA,iBAAK;IAO1BA,6BAAgB;IAAAA,YAA2C;;IAAAA,iBAAK;IAChEA,0BAAI;IAACA,YAAuB;IAAAA,iBAAK;IACjCA,qEAAoE;IAXtEA,iBAA+B;;;;;IACxBA,eAAkB;IAAlBA,+CAAkB;IAClBA,eAAgB;IAAhBA,6CAAgB;IAOLA,eAA2C;IAA3CA,gEAA2C;IACtDA,eAAuB;IAAvBA,oDAAuB;IACvBA,eAAkB;IAAlBA,0CAAkB;;;AC1B7B;AAOA,OAAM,MAAOC,cAAc;EAN3BC;IAOE,cAAS,GAAW,OAAO;IAC3B,iBAAY,GAAY,IAAI;IAC5B;IACA,UAAK,GAAU,CACb;MACE,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,OAAO;MACf,OAAO,EAAE,GAAG;MACZ,aAAa,EAAE,kGAAkG;MACjH,UAAU,EAAE;KACb,EACD;MACE,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,mBAAmB;MAC3B,OAAO,EAAE,EAAE;MACX,aAAa,EAAE,8GAA8G;MAC7H,UAAU,EAAE;KACb,CACF;;EAED;EACAC,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAAC;qBAxBUH,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAI;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDT3BT,6BAAoB;QAAAA,YAAoC;QAAAA,iBAAK;QAE7DA,gCAAgE;QAGtDA,uBAAO;QAAAA,iBAAK;QAChBA,0BAAI;QAAAA,oBAAI;QAAAA,iBAAK;QACbA,0BAAI;QAAAA,sBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QACpBA,8BAAgB;QAENA;UAAA,OAASU,iBAAa;QAAA,EAAC;QAE7BV,aAAyC;QAAAA,iBAAS;QAG1DA,8BAAO;QACLA,gEAA+B;QAYnCA,iBAAQ;;;QA7BYA,eAAoC;QAApCA,iEAAoC;QAa9CA,gBAAyC;QAAzCA,wEAAyC;QAI1BA,eAAQ;QAARA,mCAAQ","names":["i0","ItemsComponent","constructor","toggleImage","displayImage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\gisle\\Documents\\WebApp\\MyShop-2\\AngularPractice\\ClientApp\\src\\app\\items\\items.component.html","C:\\Users\\gisle\\Documents\\WebApp\\MyShop-2\\AngularPractice\\ClientApp\\src\\app\\items\\items.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of Items ({{ viewTitle }} View)</h1>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Item Id</th>\r\n      <th>Name</th>\r\n      <th>Price</th>\r\n      <th>Description</th>\r\n      <th width=\"180\">\r\n        <button class=\"btn btn-primary\"\r\n                (click)=\"toggleImage()\">\r\n        <!-- If displayImage boolean is true, the button will display \"Hide\", if false, it will display \"Show\"-->\r\n          {{ displayImage ? \"Hide\" : \"Show\"}} Image</button></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor='let item of items'>\r\n      <td> {{ item.ItemId }} </td>\r\n      <td> {{ item.Name }} </td>\r\n      <!-- Remember transform(value: number, character: string): string {\r\n      return character + ' ' + value.toString(); ?\r\n      Here we take in the item.Price in the transform() method as first argument and we have the pipe\r\n      \"kr.\" string as the second argument. The returned value from the transform() method is \"kr. 150\"\r\n      because the return value returns first the string  \"kr.\" followed by \" \" space string and then\r\n      the toString of the item.Price. -->\r\n      <td width=\"120\">{{ item.Price | convertToCurrency: \"kr.\" }}</td>\r\n      <td> {{ item.Description }} </td>\r\n      <td *ngIf=\"displayImage\"><img [src]=item.ImageUrl width=\"80\" /></td>\r\n</tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\n\n// If we want to style our components, we can simply reference a css file.\n@Component({\n  selector: 'app-items-component',\n  templateUrl: './items.component.html',\n  styleUrls: [\"./items.component.css\"]\n})\n\nexport class ItemsComponent {\n  viewTitle: string = 'Table';\n  displayImage: boolean = true;\n  // For now the content of the array item is any, because we don't care about the type\n  items: any[] = [\n    {\n      \"ItemId\": 1,\n      \"Name\": \"Pizza\",\n      \"Price\": 150,\n      \"Description\": \"Delicious Italian dish with a thin crust topped with tomato sauce, cheese, and various toppings.\",\n      \"ImageUrl\": \"assets/images/pizza.jpg\"\n    },\n    {\n      \"ItemId\": 2,\n      \"Name\": \"Fried Chicken Leg\",\n      \"Price\": 20,\n      \"Description\": \"Crispy and succulent chicken leg that is deep-fried to perfection, often served as a popular fast food item.\",\n      \"ImageUrl\": \"assets/images/chickenleg.jpg\"\n    }\r\n  ];\n\n  // Method that inverts the boolean displayImage\n  toggleImage(): void {\n    this.displayImage = !this.displayImage;\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction ItemsComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.item.ItemId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.item.Name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.item.Price, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.item.Description, \" \");\n  }\n}\nexport class ItemsComponent {\n  constructor() {\n    this.viewTitle = 'Table';\n    // For now the content of the array item is any, because we don't care about the type\n    this.items = [{\n      \"ItemId\": 1,\n      \"Name\": \"Pizza\",\n      \"Price\": 150,\n      \"Description\": \"Delicious Italian dish with a thin crust topped with tomato sauce, cheese, and various toppings.\",\n      \"ImageUrl\": \"assets/images/pizza.jpg\"\n    }, {\n      \"ItemId\": 2,\n      \"Name\": \"Fried Chicken Leg\",\n      \"Price\": 20,\n      \"Description\": \"Crispy and succulent chicken leg that is deep-fried to perfection, often served as a popular fast food item.\",\n      \"ImageUrl\": \"assets/images/chickenleg.jpg\"\n    }];\n  }\n}\nItemsComponent.ɵfac = function ItemsComponent_Factory(t) {\n  return new (t || ItemsComponent)();\n};\nItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemsComponent,\n  selectors: [[\"app-items-component\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngForItems\", \"ngFor\", \"ngForItem\"]],\n  template: function ItemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Item Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Image\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, ItemsComponent_tr_16_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Items (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngFor\", ctx.Let)(\"ngForItem\", ctx.of);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;IAaIA,0BAA+B;IACxBA,YAAkB;IAAAA,iBAAK;IAC5BA,0BAAI;IAACA,YAAgB;IAAAA,iBAAK;IAC1BA,0BAAI;IAACA,YAAiB;IAAAA,iBAAK;IAC3BA,0BAAI;IAACA,YAAuB;IAAAA,iBAAK;;;;IAH5BA,eAAkB;IAAlBA,mDAAkB;IAClBA,eAAgB;IAAhBA,iDAAgB;IAChBA,eAAiB;IAAjBA,kDAAiB;IACjBA,eAAuB;IAAvBA,wDAAuB;;;ACVlC,OAAM,MAAOC,cAAc;EAL3BC;IAME,cAAS,GAAW,OAAO;IAC3B;IACA,UAAK,GAAU,CACb;MACE,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,OAAO;MACf,OAAO,EAAE,GAAG;MACZ,aAAa,EAAE,kGAAkG;MACjH,UAAU,EAAE;KACb,EACD;MACE,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,mBAAmB;MAC3B,OAAO,EAAE,EAAE;MACX,aAAa,EAAE,8GAA8G;MAC7H,UAAU,EAAE;KACb,CACF;;;AAlBUD,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP3BP,6BAAoB;MAAAA,YAAoC;MAAAA,iBAAK;MAE7DA,gCAAgE;MAGtDA,uBAAO;MAAAA,iBAAK;MAChBA,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MAGlBA,8BAAO;MACLA,+DAA+B;MAKnCA,iBAAQ;;;MAlBYA,eAAoC;MAApCA,iEAAoC;MAa/CA,gBAAW;MAAXA,+BAAW","names":["i0","ItemsComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\gisle\\Documents\\WebApp\\MyShop-2\\AngularPractice\\ClientApp\\src\\app\\items\\items.component.html","C:\\Users\\gisle\\Documents\\WebApp\\MyShop-2\\AngularPractice\\ClientApp\\src\\app\\items\\items.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of Items ({{ viewTitle }} View)</h1>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Item Id</th>\r\n      <th>Name</th>\r\n      <th>Price</th>\r\n      <th>Description</th>\r\n      <th>Image</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor='Let item of items'>\r\n      <td> {{ item.ItemId }} </td>\r\n      <td> {{ item.Name }} </td>\r\n      <td> {{ item.Price }} </td>\r\n      <td> {{ item.Description }} </td>\r\n</tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-items-component',\n  templateUrl: './items.component.html',\n})\n\nexport class ItemsComponent {\n  viewTitle: string = 'Table';\n  // For now the content of the array item is any, because we don't care about the type\n  items: any[] = [\n    {\n      \"ItemId\": 1,\n      \"Name\": \"Pizza\",\n      \"Price\": 150,\n      \"Description\": \"Delicious Italian dish with a thin crust topped with tomato sauce, cheese, and various toppings.\",\n      \"ImageUrl\": \"assets/images/pizza.jpg\"\n    },\n    {\n      \"ItemId\": 2,\n      \"Name\": \"Fried Chicken Leg\",\n      \"Price\": 20,\n      \"Description\": \"Crispy and succulent chicken leg that is deep-fried to perfection, often served as a popular fast food item.\",\n      \"ImageUrl\": \"assets/images/chickenleg.jpg\"\n    }\r\n  ];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}